package com.androidtechguru.blueapp.presentation.ui.componentsimport androidx.compose.foundation.Imageimport androidx.compose.foundation.layout.Arrangementimport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxHeightimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.sizeimport androidx.compose.foundation.layout.widthimport androidx.compose.foundation.layout.wrapContentHeightimport androidx.compose.foundation.shape.RoundedCornerShapeimport androidx.compose.material3.Cardimport androidx.compose.material3.CardDefaultsimport androidx.compose.material3.MaterialThemeimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.draw.clipimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.layout.ContentScaleimport androidx.compose.ui.text.style.TextOverflowimport coil.compose.rememberAsyncImagePainterimport com.androidtechguru.blueapp.domain.model.Itemimport com.androidtechguru.blueapp.presentation.ui.theme.Dimensimport com.androidtechguru.blueapp.presentation.ui.theme.ListItemBgColorimport com.androidtechguru.blueapp.presentation.utils.convertURLToDrawable@Composablefun ListScreen(listItems: List<Item>) {        Column(modifier = Modifier        .fillMaxWidth()        .wrapContentHeight()) {        repeat(listItems.size) { index ->            ListItem(                title = listItems[index].title,                subtitle = listItems[index].subtitle,                imageUrl = listItems[index].imageUrl            )        }    }    }@Composablefun ListItem(    title: String,    subtitle: String,    imageUrl: String) {    Card(shape = RoundedCornerShape(Dimens.paddingMedium_16dp),        colors = CardDefaults.cardColors()            .copy(containerColor = ListItemBgColor,                contentColor = Color.Black),        modifier = Modifier            .fillMaxWidth()) {                Row(modifier = Modifier            .fillMaxWidth()            .padding(Dimens.padding_6dp)) {            Image(                painter = rememberAsyncImagePainter(imageUrl.convertURLToDrawable()),                contentDescription = null,                alignment = Alignment.TopCenter,                modifier = Modifier                    .size(Dimens.size_100dp)                    .padding(Dimens.paddingExtraSmall_5dp)                    .clip(RoundedCornerShape(Dimens.paddingSmall_8dp)),                contentScale = ContentScale.Crop            )            Spacer(modifier = Modifier                .width(Dimens.padding_12dp)                .height(Dimens.paddingSmall_8dp))                        Column(modifier = Modifier                .fillMaxWidth()                .fillMaxHeight(),                verticalArrangement = Arrangement.SpaceBetween) {                Spacer(modifier = Modifier.height(Dimens.paddingSmall_8dp))                Text(text = title, fontSize = Dimens.textSizeMedium_16sp,                    style = MaterialTheme.typography.titleSmall)                                Spacer(modifier = Modifier.height(Dimens.paddingSmall_8dp))                Text(text = subtitle, fontSize = Dimens.textSize_14sp,                    style = MaterialTheme.typography.bodyLarge,                    maxLines = 3, overflow = TextOverflow.Ellipsis)            }        }    }    Spacer(modifier = Modifier.height(Dimens.paddingExtraSmall_5dp))}