package com.androidtechguru.blueapp.data.repositoryimport com.androidtechguru.blueapp.data.model.ImageEntityimport com.androidtechguru.blueapp.data.model.ItemEntityimport com.androidtechguru.blueapp.data.source.LocalDataSourceimport com.androidtechguru.blueapp.domain.repository.DataRepositoryimport com.androidtechguru.blueapp.domain.model.Imageimport com.androidtechguru.blueapp.domain.model.Itemimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.flow.mapimport javax.inject.Injectclass DataRepositoryImpl @Inject constructor(    private val localDataSource: LocalDataSource,) : DataRepository {    override suspend fun getImages(): Flow<List<Image>> {        return localDataSource.getImages().map { it.toDomainMap() }    }        override suspend fun getItems(): Flow<List<Item>> {        return localDataSource.getItems().map { it.toDomain() }    }}fun ImageEntity.toDomain() = Image(url)fun ItemEntity.toDomain() = Item(title, subtitle, imageUrl)fun List<ImageEntity>.toDomainMap(): List<Image> = this.map { it.toDomain() }fun List<ItemEntity>.toDomain(): List<Item> = this.map { it.toDomain() }