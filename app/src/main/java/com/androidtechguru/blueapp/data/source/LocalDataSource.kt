package com.androidtechguru.blueapp.data.sourceimport com.androidtechguru.blueapp.Rimport com.androidtechguru.blueapp.data.model.ImageEntityimport com.androidtechguru.blueapp.data.model.ItemEntityimport kotlinx.coroutines.flow.Flowimport kotlinx.coroutines.flow.flowimport javax.inject.Injectimport kotlin.random.Randomclass LocalDataSource @Inject constructor() {        fun getImages(): Flow<List<ImageEntity>> {        val images = generateDummyImageListForPage()        return flow {            emit(images)        }    }        fun getItems(): Flow<List<ItemEntity>> {        val items = generateDummyItemListForPage()        return flow {            emit(items)        }    }        fun generateDummyImageListForPage(): List<ImageEntity> {        val imageList = mutableListOf<ImageEntity>()        repeat(Random.nextInt(2, 50)) {            imageList.add(                ImageEntity(getFruitImage(dummyFruitList.shuffled()[Random.nextInt(1,                    dummyFruitList.size)].first).toString())            )        }        return imageList    }        fun generateDummyItemListForPage(): List<ItemEntity> {        val items = mutableListOf<ItemEntity>()        dummyFruitList.forEachIndexed { index, item ->            items.add(                ItemEntity(                    title = item.first,                    subtitle = item.second,                    imageUrl = getFruitImage(item.first).toString()                )            )        }        return items.generateRandomFruitList()    }        private fun List<ItemEntity>.generateRandomFruitList(): List<ItemEntity> {        val shuffledList = this.shuffled()        val randomSize = Random.nextInt(1, shuffledList.size)        return shuffledList.take(randomSize)    }        fun getFruitImage(fruitName: String): Int {        val name = fruitName.trim().replace(" ", "").lowercase()        return try {            imageList.getValue(name)        } catch (e: Exception) {            R.drawable.fruit_default        }//        return imageList.getOrDefault(name, R.drawable.fruit_default)    }        val imageList =        mapOf(            "apple" to R.drawable.apple,            "orange" to R.drawable.orange,            "pineapple" to R.drawable.pineapple,            "peach" to R.drawable.peach,            "cherry" to R.drawable.cherry,            "pear" to R.drawable.pear,            "kiwi" to R.drawable.kiwi,            "plum" to R.drawable.plum,            "blackberry" to R.drawable.blackberry,            "pomegranate" to R.drawable.pomegranate,            "papaya" to R.drawable.papaya,            "fig" to R.drawable.fig,            "dragonfruit" to R.drawable.dragonfruit,            "cantaloupe" to R.drawable.cantaloupe,            "guava" to R.drawable.guava,            "lychee" to R.drawable.lychee,            "cranberry" to R.drawable.cranberry,            "apricot" to R.drawable.apricot,            "tangerine" to R.drawable.tangerine,            "coconut" to R.drawable.coconut,            "starfruit" to R.drawable.starfruit,            "durian" to R.drawable.durian,            "sugarapple" to R.drawable.sugarapple,            "banana" to R.drawable.banana,            "orange" to R.drawable.orange,            "strawberry" to R.drawable.strawberry,            "blueberry" to R.drawable.blueberry,            "grapes" to R.drawable.grapes,            "mango" to R.drawable.mango,        )            val dummyFruitList =        listOf(            Pair("Apple",                "A sweet, crunchy fruit that's perfect for snacking and baking. Apples are rich in fiber and vitamin C."),            Pair("Pineapple",                "A tropical fruit with a sweet, tangy flavor. Pineapples are great for grilling, juicing, or adding to savory dishes."),            Pair("Watermelon",                "A refreshing summer fruit with juicy, sweet flesh. Watermelon is perfect for picnics and cooling off on hot days."),            Pair("Peach",                "A sweet and juicy fruit with soft, velvety skin. Peaches are great for eating fresh, in desserts, or canned."),            Pair("Cherry",                "Small, sweet fruits that are perfect for snacking or adding to desserts. Cherries are also great for making jams and pies."),            Pair("Pear",                "A sweet, juicy fruit with a soft texture. Pears are great for snacking, baking, or adding to salads."),            Pair("Kiwi",                "A small, brown fruit with vibrant green flesh. Kiwis are rich in vitamin C and add a tropical touch to fruit salads."),            Pair("Plum",                "A sweet, juicy fruit with a smooth skin. Plums are great for snacking or making preserves."),            Pair("Blackberry",                "A juicy, slightly tart berry thatâ€™s perfect for baking, making jams, or eating fresh."),            Pair("Pomegranate",                " A fruit with juicy, ruby-red seeds that are packed with antioxidants. Pomegranates are great for juicing or adding to salads."),            Pair("Papaya",                "A tropical fruit with sweet, orange flesh. Papayas are great for breakfast or adding to smoothies."),            Pair("Fig",                "A sweet, chewy fruit often enjoyed dried or fresh. Figs are high in fiber and make a great snack."),            Pair("Dragon Fruit",                "A strikingly vibrant fruit with a mild, sweet flavor. Dragon fruits are great for adding a tropical flair to salads and smoothies."),            Pair("Cantaloupe",                "A sweet, orange-fleshed melon that's perfect for breakfast or a refreshing snack."),            Pair("Guava",                "A tropical fruit with a sweet, floral flavor. Guavas are rich in dietary fiber and vitamin C."),            Pair("Lychee",                "A small, sweet fruit with a floral flavor. Lychees are often enjoyed fresh or canned."),            Pair("Cranberry",                "A tart berry often used in sauces, juices, and baked goods. Cranberries are high in antioxidants and vitamin C."),            Pair("Apricot",                "A sweet, tangy fruit with smooth, orange flesh. Apricots are great for snacking, baking, or drying."),            Pair("Tangerine",                "A sweet, easy-to-peel citrus fruit. Tangerines are perfect for snacking and are rich in vitamin C."),            Pair("Coconut",                "A tropical fruit with a hard shell, containing sweet, white flesh and refreshing water. Coconuts are great for cooking, baking, and drinking."),            Pair("Starfruit",                "A tropical fruit with a unique star shape when sliced. Starfruits are sweet and tart, perfect for salads or garnishing."),            Pair("Durian",                "Known as the \"king of fruits,\" durian has a strong odor but a rich, creamy taste. It's popular in Southeast Asia."),            Pair("Sugar Apple",                "A small, round fruit with a tart, juicy interior. Sugar Apples are perfect for adding flavor to desserts and drinks."),            Pair("Banana",                "A versatile fruit that provides a quick energy boost. Bananas are high in potassium and great for smoothies."),            Pair("Orange",                "A juicy citrus fruit known for its high vitamin C content. Oranges are perfect for juicing or eating fresh."),            Pair("Strawberry",                "A sweet, red fruit often enjoyed with cream or in desserts. Strawberries are packed with antioxidants."),            Pair("Blueberry",                "Small, sweet berries that are perfect for adding to cereals, yogurts, or baking. Blueberries are known for their high antioxidant content."),            Pair("Grapes",                "uicy, bite-sized fruits that come in red, green, and black varieties. Grapes are great for snacking and making wine."),            Pair("Mango",                "A tropical fruit with juicy, sweet flesh. Mangos are often enjoyed fresh, in salads, or in smoothies.")        )        }fun main() {    val dataSource = LocalDataSource()    val images = dataSource.generateDummyImageListForPage()    val items = dataSource.generateDummyItemListForPage()        val imagesCount = images.size    val itemsCount = items.size        println("Images Count: $imagesCount")    println("Items Count: $itemsCount")        println(images)    println(items.map { it.imageUrl })    println(items.map { it.title + "----" + it.imageUrl + "\n" })        println()//    println(dataSource.imageList.getOrDefault("dragonfruit",0))    println(dataSource.getFruitImage("Dragon Fruit"))    val name = "Dragon Fruit".trim().replace(" ", "").lowercase()    println(name)    println(dataSource.getFruitImage(name))    println(dataSource.imageList.getOrDefault(name, 0))}